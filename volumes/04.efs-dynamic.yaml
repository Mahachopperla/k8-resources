apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-static
spec:
  capacity:
  #  even though your PV says 5Gi, it's just metadata;
  # EFS will allow more usage, and multiple pods can mount the same path.
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-0f9308868e7638124
---
# if u observe i'm not linking pvc with ov directly here
# "In static provisioning, we usually create one EFS-backed PV for the whole project. 
#Since EFS supports ReadWriteMany (RWX), multiple pods can share it through multiple PVCs â€” but all those PVCs must refer to the same PV manually or by matching criteria.for matching criteria refer doc"
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-static-claim
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  resources:
    requests:
      storage: 5Gi
---
#here no need to mention nodeSelector as we did in EBS
# becasue EFS storage need not be in same zone but it should be created in same network in whihc eks cluster is created.
#EFS access and stores files via network. so no need to specify nodeSelector
apiVersion: v1
kind: Pod
metadata:
  name: efs-static
  labels:
    purpose: efs-static-demo
    project: roboshop
spec:
  containers:
  - name: nginx
    image: nginx
    volumeMounts:
    - name: persistent-storage
      mountPath: /usr/share/nginx/html
  volumes:
  - name: persistent-storage
    persistentVolumeClaim:
      claimName: efs-static-claim
---
apiVersion: v1
kind: Service
metadata:
  name: efs-static-service
spec:
  type: LoadBalancer
  selector:
    purpose: efs-static-demo
    project: roboshop
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80